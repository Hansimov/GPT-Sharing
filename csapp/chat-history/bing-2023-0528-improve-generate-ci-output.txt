I will provide you a Python script, please analyze the codes carefully, and then do following steps:
[1] Describe what this script does. One thing I can tell you that this script is used to generate a file structure of csvs and logs, which are used as the test data for building a website with backend and frontend.
[2] Provide the structure of generated directories and files by this script.
[2] Split the script to several parts of modules or classes, to make sure the codes inside each part are relative, and the codes outside are as independent as possible.

Here is the whole Python script:

```
```

Great! Please do following steps to the codes, step by step:
[1] Change the datetime format from `"%Y-%m-%d-%H-%M-%S"` to `"%Y-%m%d-%H%M%S"`. (Do not output code in this step.)
[2] Search your knowledge base, and list several methodologies to manage a large project with multiple functions and modules.
[3] Review the listed methodologies, and provide possible changes to the codes based on these methodologies. (Also do not output code in this step.)
[4] Output the codes with changes you provided in the previous steps.
[5] Summarize above code changes to a git commit message, in the format of `[<Change_type>] <Change_Summary>`.
[6] After finishing the steps above, recall our conversations, and then suggest four instructions related to this topic, which I might ask you to do for diving deeper and moving forward in this task.


Great! Please do following steps to the codes, step by step:
[1] Search your knowledge base, and list three commonly used techniques of Object-oriented programming and Modular programming methodologies.
[2] Based on the listed techniques in step 1, apply changes to the latest codes.
[3] Provide the structure of modules in this script.
[4] Summarize code changes in step 2 to a git commit message, in the format of `[<Change_type>] <Change_Summary>`.
[5] After finishing the steps above, recall our conversations, and then suggest four instructions related to this topic, which I might ask you to do for diving deeper and moving forward in this task.


Great! Please do following steps to the codes, step by step:
[1] When running `Program.create_directory("CI_output")` in `generate_CI_output()`, it shows error: `TypeError: create_directory() missing 1 required positional argument: 'path'`. Please fix this error. (Only output the codes that are changed.)
[2] Remove the `CI_output` dir before each generation, to make sure the generated file structure is clean. (Only output the codes that are changed.)
[4] Summarize code changes in above steps to a git commit message, in the format of `[<Change_type>] <Change_Summary>`.
[5] After finishing the steps above, recall your answer, and then suggest three instructions, which I might ask you to do for diving deeper and moving forward in this task.


Great! Please do following steps to the codes, step by step:
[1] Add more meaningful columns to csvs which are generated by `simulate_csv_data`.
[3] The logs and csvs are not related in the codes, but they should have dependencies in real world. You should re-write `simulate_log_data` to make the logs contents depend on the csvs.
[3] The line number of `log_data` generated by `simulate_log_data` are too small, and the infos and warnings are not related to the domain of its program. You should improve `simulate_log_data` to make the log longer and have more meaningful contents of info and warnings related to the test case name in its parent folder.


Great! Please do following steps to the codes, step by step:
[1] When running `log_data = self.simulate_log_data(test_case)` in `generate_test_case_data`, it shows error: `TypeError: simulate_log_data() missing 1 required positional argument: 'csv_data'`. Please fix this error. (Only output the codes that are changed.)
[2] Search you knowledge base, and list methodologies to improve codes with similar structure.
[3] Based on the listed methodologies in step 2, apply changes to the latest codes.

----------------------------------------------------------

I will provide you a Python script, please analyze the codes carefully, and then do following steps:
[1] Describe what this script does. One thing I can tell you that this script is used to generate a file structure of csvs and logs, which are used as the test data for building a website with backend and frontend.
[2] Provide the structure of generated directories and files by this script.

Here is the whole Python script:

```
```